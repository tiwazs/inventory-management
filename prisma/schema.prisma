// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String      @id @default(cuid())
  name          String?     @unique
  email         String      @unique
  password      String?
  firstName     String?
  lastName      String?
  image         String?
  emailVerified DateTime?
  apiKey        String?     @unique
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  Workspace     Workspace[]
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Type {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Item      Item[]
}

model Workspace {
  id        String     @id @default(cuid())
  User      User       @relation(fields: [userId], references: [id])
  userId    String
  name      String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Category  Category[]
  Location  Location[]
  Item      Item[]
  IAM       IAM[]
}

model IAM {
  id          String    @id @default(cuid())
  Workspace   Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId String
  password    String
  tagname     String?
  role        Role      @default(USER)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum Role {
  USER
  ADMIN
}

model Category {
  id          String    @id @default(cuid())
  Workspace   Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId String
  name        String
  description String?
  lft         Int
  rgt         Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  Item        Item[]
}

model Location {
  id          String    @id @default(cuid())
  Workspace   Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId String
  name        String
  address     String?
  latitude    Float?
  longitude   Float?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  Item        Item[]
}

model Item {
  id                String    @id @default(cuid())
  Workspace         Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId       String
  Category          Category  @relation(fields: [categoryId], references: [id])
  categoryId        String
  Location          Location? @relation(fields: [locationId], references: [id])
  locationId        String?
  Type              Type      @relation(fields: [typeId], references: [id])
  typeId            String
  barcode           String?
  serialNumber      String?
  quantity          Int
  name              String
  description       String?
  wholeSalePriceInd Float?
  retailPriceInd    Float?
  wholeSalePrice    Float?
  retailPrice       Float?
  length            Float?
  width             Float?
  height            Float?
  weight            Float?
  forSale           Boolean
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}
